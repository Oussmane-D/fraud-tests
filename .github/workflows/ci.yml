name: CI

on:
  push:    { branches: [main] }
  pull_request: { branches: [main] }

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          DATA_CSV_PATH: /opt/airflow/tests/fixtures/transactions.csv
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          AWS_ACCESS_KEY_ID:    ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION:   ${{ secrets.AWS_DEFAULT_REGION }}
          POSTGRES_USER: airflow
          POSTGRES_PASSWORD: airflow
          POSTGRES_DB: airflow
        options: >-
          --health-cmd="pg_isready -U airflow"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
     - uses: actions/checkout@v3

     - name: Build Airflow image
       run: docker compose build airflow

     - name: Run Airflow tests
       run: |
        docker compose run --rm --entrypoint="" \
          -e DATA_CSV_PATH=/opt/airflow/tests/fixtures/transactions.csv \
          -e MLFLOW_TRACKING_URI=http://dummy \
          -e AIRFLOW__CORE__EXECUTOR=SequentialExecutor \
          -e AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////tmp/airflow_test.db \
          airflow bash -c "airflow db init && pytest /opt/airflow/tests -q"

    # 3. Build lâ€™image API si les tests passent
     - name: Build API image
       run: docker compose build api



  
